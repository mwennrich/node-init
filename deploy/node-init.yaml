apiVersion: v1
kind: ServiceAccount
metadata:
  name: node-init
  namespace: kube-system
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: node-init
spec:
  allowPrivilegeEscalation: true
  privileged: true
  fsGroup:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  volumes:
  - secret
  hostNetwork: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-system:node-init
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - watch
  - list
  - get
- apiGroups:
  - extensions
  resources:
  - podsecuritypolicies
  resourceNames:
  - node-init
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-system:node-init
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-system:node-init
subjects:
- apiGroup: ""
  kind: ServiceAccount
  name: node-init
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-init
  namespace: kube-system
  labels:
    app: node-init
spec:
  selector:
    matchLabels:
      app: node-init
  template:
    metadata:
      labels:
        app: node-init
    spec:
      serviceAccount: node-init
      serviceAccountName: node-init
      containers:
      - name: node-init-pause
        image: k8s.gcr.io/pause:3.3
        securityContext:
          privileged: true
        resources:
          requests:
            cpu: 0m
            memory: 1Mi
      initContainers:
      - name: node-init
        image: metal-stack/node-init:latest
        env:
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /var/run/frr
          name: frrsockets
      hostNetwork: true
      volumes:
      - name: frrsockets
        hostPath:
          path: /var/run/frr
